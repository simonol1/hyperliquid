version: '3.9'

services:
  redis:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--bind", "0.0.0.0", "--protected-mode", "yes"]
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - backend

  orchestrator:
    build:
      context: .
      target: runner
    container_name: orchestrator
    env_file: .env
    environment:
      - REDIS_URL=redis://redis:6379
      - MAX_GLOBAL_CONCURRENT_TRADES=6
    command: ["node", "dist/orchestrator.mjs"]
    depends_on:
      - redis
    restart: unless-stopped
    volumes:
      - ./logs/orchestrator:/app/logs
    networks:
      - backend

  trend_bot:
    build:
      context: .
      target: runner
    container_name: trend_bot
    env_file: .env
    environment:
      - REDIS_URL=redis://redis:6379
      - BOT_NAME=TREND
    command: ["node", "dist/trend.mjs"]
    depends_on:
      - redis
    restart: unless-stopped
    volumes:
      - ./logs/trend:/app/logs
    networks:
      - backend

  breakout_bot:
    build:
      context: .
      target: runner
    container_name: breakout_bot
    env_file: .env
    environment:
      - REDIS_URL=redis://redis:6379
      - BOT_NAME=BREAKOUT
    command: ["node", "dist/breakout.mjs"]
    depends_on:
      - redis
    restart: unless-stopped
    volumes:
      - ./logs/breakout:/app/logs
    networks:
      - backend

  reversion_bot:
    build:
      context: .
      target: runner
    container_name: reversion_bot
    env_file: .env
    environment:
      - REDIS_URL=redis://redis:6379
      - BOT_NAME=REVERSION
    command: ["node", "dist/reversion.mjs"]
    depends_on:
      - redis
    restart: unless-stopped
    volumes:
      - ./logs/reversion:/app/logs
    networks:
      - backend

volumes:
  redis_data:

networks:
  backend:
    driver: bridge
